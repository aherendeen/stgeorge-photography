---
import MobileNav from "@components/Nav/MobileNav/MobileNav.astro";
import NavLink from "@components/Nav/NavLink.astro";
import SiteLogo from "@components/SiteLogo/SiteLogo.astro";
import navData from "@config/navData.json";

interface Props {
	startStyle?: "default" | "white"; // if set to "white", the nav elements will be white until the page is scrolled down. Useful for background hero images.
	/**
	 * Additional HTML attributes to be spread onto the nav container.
	 * Example: aria-label, data attributes, etc.
	 */
	rest?: Record<string, any>;
}

const { startStyle = "default", rest } = Astro.props as Props;
---

<div
	id="nav__container"
	class="initial fixed top-0 left-0 z-30 flex w-full flex-col py-2 transition-[padding,background-color] duration-300"
	transition:name={`nav`}
	{...rest}
>
	<div class={`mx-auto flex w-full${startStyle === "default" ? " text-base-900" : ""}`}>
		<div class="site-container flex h-16 w-full items-center">
			<header class="flex w-full items-center gap-2">
				<!-- home button / image -->
				<div class="flex flex-auto justify-start">
					<SiteLogo />
				</div>

				<!-- desktop nav menu -->
                                <div class="flex flex-auto items-center justify-end lg:gap-6">
                                        <nav class="hidden md:block">
                                                <ul class="flex h-full items-center justify-center px-2 text-sm lg:gap-2 xl:text-base">
                                                        {navData.map((navItem) => (
                                                                <NavLink navItem={navItem} class="h-10" />
                                                        ))}
                                                </ul>
                                        </nav>

                                        <!-- mobile nav menu, only load on small screens where it is visible -->
                                        <div class="md:hidden">
                                                <MobileNav />
					</div>
				</div>
			</header>
		</div>
	</div>
</div>

<script>
	let navbar: HTMLElement | null;
        function scrollHandler() {
                if (navbar) {
                        if (window.scrollY > 50) {
                                // if we have scrolled down the page a bit, adjust colors
                                navbar.classList.add("scrolled");
                                navbar.classList.remove("initial");
                        } else {
                                navbar.classList.add("initial");
                                navbar.classList.remove("scrolled");
                        }
                }
        }

        function initNav() {
                navbar = document.getElementById("nav__container");
                window.addEventListener("scroll", scrollHandler, { passive: true });
        }

	function handleAfterSwap() {
		// Remove previous scroll listener to avoid duplicates
		window.removeEventListener("scroll", scrollHandler);
		initNav();
	}

	// runs on initial page load
	initNav();

	// runs on view transitions navigation. Not needed if item has "transition:persist"
	document.removeEventListener("astro:after-swap", handleAfterSwap);
	document.addEventListener("astro:after-swap", handleAfterSwap);
</script>

<style>
	#nav__container.initial {
		/* @apply text-white; */
		color: white;
	}

	#nav__container.scrolled {
		/* @apply bg-base-50 py-0; */
		background-color: var(--color-base-50);
		padding-block: 0;
	}
</style>
