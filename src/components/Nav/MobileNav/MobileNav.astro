---
import NavLink from "@components/Nav/NavLink.astro";
import navData from "@config/navData.json";
import { Icon } from "astro-icon/components";
---

<div id="mobile-nav__container">
	<button
		id="mobile-nav__burger"
		aria-label="open navigation menu"
		aria-haspopup="true"
		aria-expanded="false"
		class="primary-focus h-10 w-10 rounded-none"
	>
		<!-- hamburger icon to open menu -->
		<Icon
			name="tabler:menu-2"
			class="m-auto inline-block h-8 w-8 stroke-current"
			aria-hidden="true"
		/>
	</button>
        <div
                id="mobile-nav__content"
                class="fixed top-0 right-0 z-20 hidden h-screen w-full max-w-xs bg-base-50 text-base-900 shadow-xl transition-all duration-300 sm:max-w-sm"
        >
                <div class="flex h-full flex-col">
                        <div class="flex items-center justify-between px-6 py-4">
                                <span class="text-lg font-semibold uppercase tracking-wide">Menu</span>
                                <button id="mobile-nav__close" class="primary-focus p-2" aria-label="close navigation menu">
                                        <!-- "X" icon to close menu -->
                                        <Icon name="tabler:x" class="h-8 w-8" aria-hidden="true" />
                                </button>
                        </div>

                        <!-- nav items -->
                        <nav class="flex-1 overflow-y-auto">
                                <ul class="space-y-2 px-6 py-4">
                                        {navData.map((navItem) => (
                                                <NavLink navItem={navItem} isMobile />
                                        ))}
                                </ul>
                        </nav>
                </div>
        </div>

	<!-- backdrop button to also close menu -->
	<button
		id="mobile-nav__backdrop"
		class="mobile-nav__backdrop--fade-out fixed top-0 left-0 z-10 h-screen bg-black"
		aria-label="close navigation menu"></button>
</div>

<script>
	let mobileNavContainer: HTMLElement | null;
	let mobileNavBurger: HTMLElement | null;
	let mobileNavContent: HTMLElement | null;
	let mobileNavCloseBtn: HTMLElement | null;
	let mobileNavBackdrop: HTMLElement | null;

        function toggleMobileNav(event?: Event) {
                if (mobileNavBurger && mobileNavContent && mobileNavContainer && mobileNavBackdrop)
                        if (!mobileNavContainer.classList.contains("open")) {
                                // mobile nav is currently closed, so open it
				mobileNavContainer.classList.add("open");
				mobileNavBurger.setAttribute("aria-expanded", "true");

				// mobile nav content drawer
                                mobileNavContent.classList.remove("hidden");
                                mobileNavContent.classList.remove("mobile-nav--slide-out");
                                mobileNavContent.classList.add("mobile-nav--slide-in");

                                // backdrop button
                                mobileNavBackdrop.classList.remove("hidden");
				mobileNavBackdrop.classList.remove("mobile-nav__backdrop--fade-out");
				mobileNavBackdrop.classList.add("mobile-nav__backdrop--fade-in");
			} else {
				// dropdown is currently open, so close it
				mobileNavContainer.classList.remove("open");
				mobileNavBurger.setAttribute("aria-expanded", "false");

				// mobile nav content drawer
                                mobileNavContent.classList.remove("mobile-nav--slide-in");
                                mobileNavContent.classList.add("mobile-nav--slide-out");
                                // make hidden after the slide out effect is done
                                setTimeout(() => {
                                        mobileNavContent?.classList.add("hidden");
				}, 300);

				// backdrop button
				mobileNavBackdrop.classList.remove("mobile-nav__backdrop--fade-in");
				mobileNavBackdrop.classList.add("mobile-nav__backdrop--fade-out");
				// set a timeout
			}
                event?.preventDefault();
                return false;
        }

        function initMobileNav() {
		// every time a view transition or page load occurs, we need to init these variables
		mobileNavContainer = document.getElementById("mobile-nav__container");
		mobileNavBurger = document.getElementById("mobile-nav__burger");
		mobileNavContent = document.getElementById("mobile-nav__content");
		mobileNavCloseBtn = document.getElementById("mobile-nav__close");
		mobileNavBackdrop = document.getElementById("mobile-nav__backdrop");

                if (mobileNavBurger && mobileNavCloseBtn && mobileNavBackdrop) {
                        mobileNavBurger.addEventListener("click", toggleMobileNav);
                        mobileNavCloseBtn.addEventListener("click", toggleMobileNav);
                        mobileNavBackdrop.addEventListener("click", toggleMobileNav);
                }

                const mobileNavLinks = mobileNavContent?.querySelectorAll("[data-mobile-nav-link]") ?? [];
                mobileNavLinks.forEach((link) => {
                        link.addEventListener("click", () => {
                                if (mobileNavContainer?.classList.contains("open")) {
                                        toggleMobileNav();
                                }
                        });
                });
        }

	// runs on initial page load
	initMobileNav();

	// runs on view transitions navigation
	document.addEventListener("astro:after-swap", initMobileNav);
</script>

<style>
        .mobile-nav__backdrop--fade-in {
                animation: MobileNavFadeInAnimation ease-in-out 0.3s forwards;
                display: block;
                width: 100vw;
        }

        .mobile-nav__backdrop--fade-out {
                display: none;
                width: 0;
                opacity: 0;
        }

        @keyframes MobileNavFadeInAnimation {
                0% {
                        opacity: 0;
                }
                100% {
                        opacity: 0.4;
                }
        }

        /* mobile nav content drawer */
        #mobile-nav__content {
                transform: translateX(100%);
        }

        .mobile-nav--slide-in {
                animation: mobileNavSlideInAnimation ease-in-out 0.3s forwards;
        }

        .mobile-nav--slide-out {
                animation: mobileNavSlideOutAnimation ease-in-out 0.3s forwards;
        }

        @keyframes mobileNavSlideInAnimation {
                0% {
                        transform: translateX(100%);
                }
                100% {
                        transform: translateX(0);
                }
        }

        @keyframes mobileNavSlideOutAnimation {
                0% {
                        transform: translateX(0);
                }
                100% {
                        transform: translateX(100%);
                }
        }
</style>
